# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                           controllers.Assets.versioned(path="/public", file: Asset)
GET         /versionedAssets/*file                  controllers.PublicResourceController.versioned(path="/public", file: Asset, version: String)
GET         /javascriptRoutes                       controllers.JavaScriptRoutesController.javascriptRoutes
GET         /firebase-messaging-sw.js               controllers.Assets.at(path="/public/javascripts/firebase", file="firebase-messaging-sw.js")

# Index
GET         /                                       controllers.IndexController.index()
GET         /sitemap.xml                            controllers.IndexController.sitemap()
GET         /websocket                              controllers.WebSocketController.connect()

# DO NOT CHANGE
GET         /nftResource/:id                        controllers.NFTController.resource(id: String)

GET         /signUp                                 controllers.AccountController.signUpForm()
POST        /signUp                                 controllers.AccountController.signUp()

GET         /checkUsernameAvailable                 controllers.AccountController.checkUsernameAvailable(username: String)

GET         /verifyWalletMnemonicso                 controllers.AccountController.verifyWalletMnemonicsForm()
POST        /verifyWalletMnemonics                  controllers.AccountController.verifyWalletMnemonics()

GET         /signInWithCallback                     controllers.AccountController.signInWithCallbackForm(callbackUrl: String ?= "/")
POST        /signInWithCallback                     controllers.AccountController.signInWithCallback()

GET         /signOut                                controllers.AccountController.signOutForm()
POST        /signOut                                controllers.AccountController.signOut()

GET         /forgetPassword                         controllers.AccountController.forgetPasswordForm()
POST        /forgetPassword                         controllers.AccountController.forgetPassword()

GET         /changePassword                         controllers.AccountController.changePasswordForm()
POST        /changePassword                         controllers.AccountController.changePassword()

GET         /changeActiveKey                        controllers.AccountController.changeActiveKeyForm(address: String)
POST        /changeActiveKey                        controllers.AccountController.changeActiveKey()

GET         /walletPopup                            controllers.WalletController.walletPopup()
GET         /wrappedTokenBalance                    controllers.WalletController.wrappedTokenBalance()
GET         /walletBalance                          controllers.WalletController.balance(address: String)
GET         /walletPopupKeys                        controllers.WalletController.walletPopupKeys()

GET         /collectedSection                       controllers.CollectedController.collectedSection(accountId: String)
GET         /collectedNFTsPerPage                   controllers.CollectedController.nftsPerPage(accountId: String, pageNumber: Int)
GET         /collectedCollectionTopRightCard        controllers.CollectedController.sectionTopRightCard(accountID: String)

GET         /wishlistSection                        controllers.WishlistController.wishlistSection(accountId: String)
GET         /wishListNFTsPerPage                    controllers.WishlistController.nftsPerPage(accountId: String, pageNumber: Int)

POST        /addToWishList                          controllers.WishlistController.add()
POST        /deleteFromWishList                     controllers.WishlistController.delete()

#GET         /nft/:id                                           controllers.NFTController.viewNFT(id: String)
GET         /nft/:id/:activeTab                     controllers.NFTController.viewNFT(id: String, activeTab: String)
GET         /nft/:id                                controllers.NFTController.viewNFT(id: String, activeTab: String ?= "OVERVIEW")
GET         /nftDetails                             controllers.NFTController.details(nftId: String)
GET         /nftDetailViewLeftCards                 controllers.NFTController.detailViewLeftCards(nftId: String)
GET         /nftInfo                                controllers.NFTController.info(nftId: String)
GET         /nftDetailViewRightCards                controllers.NFTController.detailViewRightCards(nftId: String)
GET         /likesCounter                           controllers.NFTController.likesCounter(nftId: String)
GET         /createdSection                         controllers.NFTController.createdSection(accountId: String)
GET         /createdNFTsPerPage                     controllers.NFTController.createdNFTsPerPage(accountId: String, pageNumber: Int)

# Create NFT
GET         /uploadNFTFileForm                      controllers.NFTController.uploadNFTFileForm()
POST        /storeNFTFile                           controllers.NFTController.storeNFTFile(documentType: String)
GET         /uploadNFTFile                          controllers.NFTController.uploadNFTFile(documentType: String, name: String)
GET         /basicDetails                           controllers.NFTController.basicDetailsForm(nftId: String)
POST        /basicDetails                           controllers.NFTController.basicDetails()
GET         /deleteNftDraft                         controllers.NFTController.deleteDraftForm(nftId: String, fileHash: String)
POST        /deleteNftDraft                         controllers.NFTController.deleteDraft()
GET         /transferNFT                            controllers.NFTController.transferForm(nftId: String)
POST        /transferNFT                            controllers.NFTController.transfer()
GET         /overviewSection                        controllers.NFTController.overview(nftId: String, activeTab: String)
GET         /tradeSection                           controllers.NFTController.trade(nftId: String)
GET         /sellOrders                             controllers.NFTController.sellOrders(nftId: String)
GET         /sellOrdersPerPage                      controllers.NFTController.sellOrdersPerPage(nftId: String, pageNumber: Int)
GET         /yourOrders                             controllers.NFTController.yourOrders(nftId: String)
GET         /yourOrderPerPage                       controllers.NFTController.yourOrdersPerPage(nftId: String,pageNumber: Int)
GET         /revealProperty                         controllers.NFTController.revealPropertyForm()
POST        /revealProperty                         controllers.NFTController.revealProperty()

GET         /settings                               controllers.SettingController.viewSettings()
GET         /profileSettings                        controllers.SettingController.settings()
GET         /addNewKey                              controllers.SettingController.addNewKey()
GET         /addManagedKey                          controllers.SettingController.addManagedKeyForm()
POST        /addManagedKey                          controllers.SettingController.addManagedKey()
GET         /addUnmanagedKey                        controllers.SettingController.addUnmanagedKeyForm()
POST        /addUnmanagedKey                        controllers.SettingController.addUnmanagedKey()
GET         /changeKeyName                          controllers.SettingController.changeKeyNameForm(address: String)
POST        /changeKeyName                          controllers.SettingController.changeKeyName()
GET         /viewMnemonics                          controllers.SettingController.viewMnemonicsForm(address: String)
POST        /viewMnemonics                          controllers.SettingController.viewMnemonics()
GET         /deleteKey                              controllers.SettingController.deleteKeyForm(address: String)
POST        /deleteKey                              controllers.SettingController.deleteKey()
GET         /provisionAddress                       controllers.SettingController.provisionAddressForm(address: String)
POST        /provisionAddress                       controllers.SettingController.provisionAddress()

GET         /defaultProfile                         controllers.ProfileController.viewDefaultProfile()
GET         /profile/:accountId/:activeTab          controllers.ProfileController.viewProfile(accountId: String, activeTab: String)
GET         /profile/:accountId                     controllers.ProfileController.viewProfile(accountId: String, activeTab: String ?= "COLLECTED")
GET         /profileSection                         controllers.ProfileController.profile(accountId: String, activeTab: String)
GET         /notificationPopup                      controllers.ProfileController.notificationPopup()
GET         /loadMoreNotifications                  controllers.ProfileController.loadMoreNotifications(pageNumber: Int)
GET         /countUnreadNotification                controllers.ProfileController.countUnreadNotification()
POST        /markNotificationsRead                  controllers.ProfileController.markNotificationsRead()
GET         /profileInfoCard                        controllers.ProfileController.profileInfoCard(accountId: String)
GET         /profileActivityCard                    controllers.ProfileController.profileActivityCard(accountId: String)
GET         /profileAnalysisCard                    controllers.ProfileController.profileAnalysisCard(accountId: String)
GET         /transactionsSection                    controllers.ProfileController.transactionsSection()
GET         /transactionsPerPage                    controllers.ProfileController.transactionsPerPage(pageNumber:Int)



GET         /market                                 controllers.SecondaryMarketController.view()
GET         /marketNFTs                             controllers.SecondaryMarketController.marketNFTs()
GET         /marketNFTsPerPage                      controllers.SecondaryMarketController.nftsPerPage(pageNumber: Int)
GET         /createSecondaryMarket                  controllers.SecondaryMarketController.createForm(nftId: String)
POST        /createSecondaryMarket                  controllers.SecondaryMarketController.create()
GET         /cancelSecondaryMarket                  controllers.SecondaryMarketController.cancelForm(nftId: String, secondaryMarketId: String)
POST        /cancelSecondaryMarket                  controllers.SecondaryMarketController.cancel()
GET         /buySecondaryMarket                     controllers.SecondaryMarketController.buyForm(secondaryMarketId: String)
POST        /buySecondaryMarket                     controllers.SecondaryMarketController.buy()

GET         /listedSection                          controllers.SecondaryMarketController.listedSection(accountId: String)
GET         /listedNFTsPerPage                      controllers.SecondaryMarketController.listedNFTsPerPage(accountId: String, pageNumber: Int)

GET         /unwrapToken                            controllers.WalletController.unwrapTokenForm()
POST        /unwrapToken                            controllers.WalletController.unwrapToken()

#GET         /changeManagedToUnmanaged        controllers.ProfileController.changeManagedToUnmanagedForm(address: String)
#POST        /changeManagedToUnmanaged        controllers.ProfileController.changeManagedToUnmanaged()

GET         /wrapCoin                               controllers.WalletController.wrapCoinForm()
POST        /wrapCoin                               controllers.WalletController.wrapCoin()
